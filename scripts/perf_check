#!/bin/bash

echo "[INFO] Start check und print status of ingestion jobs \n"

lhost=$(hostname)
WORK=$PWD
TODAY=`date +\%F`
YESTERDAY=`date --date='1 day ago' +\%F`
TWODAGO=`date --date='2 day ago' +\%F`
WEEK=`date +\%U`
if [ -n "$1" ]
then
  upload_list=$1
else
  upload_list="upload_list_${TODAY}"
fi

echo -e "  |- Job list\t$upload_list"
echo -e "  |- On host \t$lhost"

echo -e "\n Run status of jobs :"
printf ' | %-5s | %-7s | %-4s | %-6s |' "Total" "Running" "Done" "Failed" 
printf '\n | %-5s | %-7s | %-4s | %-6s |' "$(ls ${upload_list}.* DONE/${upload_list}.* 2>/dev/null | wc -l)" "$(ps -elf | grep manager | grep ${upload_list} | wc -l)" "$(ls DONE/${upload_list}.* 2>/dev/null | wc -l)" "$(grep 'Internal server error' log/${upload_list}.*.err | grep -c -v ':0' )"
printf '\n %40s' "############################################################\n"
##echo -e "|- $(ls DONE/${upload_list}.* 2>/dev/null | wc -l) jobs are sucessfully done"
##echo -e "|- Jobs failed :\n   $(grep -c 'Internal server error' log/${upload_list}.*.err | grep -v ':0' ) "
##echo -e "|- $(ps -elf | grep manager | grep upload | wc -l) threads are running"

nfiles=0

printf '\n | %-6s : %-25s --> %-10s # %-6s |[ %-8s - %-8s ]| < %-20s |\n' "Thread" "Jobfile" "Status" "PID" "Start" "End" "Community-Set"
printf '\n    |%-10s|%-10s|%-10s|%-10s|%-10s|%-10s|%-19s|' "-Records" ">Provided" "#Done" "+Created" "%Updated" "?Failed" "/No action required" 
printf '\n    |%-32s|%-10s|%-10s|%-10s|%-19s|\n' "-Handles" "+Created" "%Updated" "?Failed" "/No action required" 

for file in $(ls ${upload_list}.* DONE/${upload_list}.* 2>/dev/null)
do
  (( nfiles = nfiles + 1))
  pid=$( ps -elf | grep manager | grep $file | awk '{print $4}' )

  if [ -z $pid ]
  then
     status='stopped'
  else
     status='running'
     pid="$pid"
  fi
  jobfile=$file

  echo -e "   __________________________________________________________________"

  outfile="log/$(basename ${file}).out"
  errfile="log/$(basename ${file}).err"
  npfrec=0
  ndone=0
  comm_set=""
  sets=""
  while read community oaiurl dir mdprefix set 
  do
    setdir="${dir}/${set}"
    comm_set+=" ${community}-${set}"
    sets+=" ${set}"
    ndirrec=$(ls ${setdir}/json/*.json 2>/dev/null | wc -l)
    ##echo -e "   |- Community-Set\t${community}\t${set}\t\n    |- #provided records\t$ndirrec "
    ((npfrec = npfrec + ndirrec)) 

  done < "$jobfile"

  ndone=$(grep -c '| u |' ${outfile})
  nrcreated=$(grep -c 'Creation of ' ${outfile})
  nrupdated=$(grep -c 'Update of ' ${outfile})
  nrfailed=$(grep -c 'Failed upload of' ${outfile})
  nrnoaction=$(grep -c 'No update required' $outfile)
  nhcreated=$(grep -c 'Create a new handle' ${outfile})
  nhupdated=$(grep -c 'Update handle' ${outfile})
  nhfailed=$(grep -c 'CRITICAL' $outfile) ##HEW-??? $(grep -c 'failed' $outfile)
  nhnoaction=$(grep -c 'No action required' $outfile)
  printf '\n | %-6s : %-25s --> %-10s # %-6s |[ %-8s - %-8s ]| < %-20s |\n' "$nfiles" "$jobfile" "$status" "$pid" "$(grep 'Start :' ${outfile} | cut -d' ' -f3)" "$(stat ${outfile} | grep 'Change: [[:digit:]]' | cut -d' ' -f2,3 | cut -d'.' -f1)" "${comm_set}"
  for subset in ${sets}
  do
    srupl=$(grep $subset ${outfile})
    if [ -z "$srupl" ]
    then
      printf '...\n   '
##    else
##      printf "\n  |- $srupl "
    fi
  done

  printf '\n    |%-10s|%-10s|%-10s|%-10s|%-10s|%-10s|%-19s|' "-Records" ">$npfrec" "#$ndone" "+$nrcreated" "%$nrupdated" "?$nrfailed" "/$nrnoaction" 
  printf '\n    |%-32s|%-10s|%-10s|%-10s|%-19s|\n' "-Handles" "+$nhcreated" "%$nhupdated" "?$nhfailed" "/$nhnoaction" 
  (( ntotrec  = ntotrec  + npfrec ))
  (( ntotdone = ntotdone + ndone ))
  (( ntotrcreated = ntotrcreated + nrcreated ))
  (( ntotrupdated = ntotrupdated + nrupdated ))
  (( ntotrfailed = ntotrfailed + nrfailed ))
  (( ntotrnoaction = ntotrnoaction + nrnoaction ))
  (( ntothcreated = ntothcreated + nhcreated ))
  (( ntothupdated = ntothupdated + nhupdated ))
  (( ntothfailed = ntothfailed + nhfailed ))
  (( ntothnoaction = ntothnoaction + nhnoaction ))
done
wait

echo -e "\n######################################################\n Total ingest status :"
printf '\n  |%-10s|%-10s|%-10s|%-10s|%-10s|%-10s|%-19s|' "-Records" ">$ntotrec" "#$ntotdone" "+$ntotrcreated" "%$ntotrupdated" "?$ntotrfailed" "/$ntotrnoaction" 
printf '\n  |%-32s|%-10s|%-10s|%-10s|%-19s|\n' "-Handles" "+$ntothcreated" "%$ntothupdated" "?$ntothfailed" "/$ntothnoaction" 

echo "[INFO] End of check at $(date)"

exit 0
